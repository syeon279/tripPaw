<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssdam.tripPaw.place.PlaceMapper">

	<!-- 결과 매핑 -->
	<resultMap id="placeResultMap"
		type="com.ssdam.tripPaw.domain.Place">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="description" column="description" />
		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="region" column="region" />
		<result property="openHours" column="open_hours" />
		<result property="petFriendly" column="pet_friendly" />
		<result property="petVerified" column="pet_verified" />
		<result property="restDays" column="rest_days" />
		<result property="price" column="price" />
		<result property="phone" column="phone" />
		<result property="parking" column="parking" />
		<result property="imageUrl" column="image_url" />
		<result property="homePage" column="home_page" />
		<result property="externalContentId"
			column="external_content_id" />
		<result property="source" column="source" />
		<association property="placeType"
			javaType="com.ssdam.tripPaw.domain.PlaceType">
			<id property="id" column="place_type_id" />
		</association>
	</resultMap>

	<!-- insert -->
	<insert id="insert"
		parameterType="com.ssdam.tripPaw.domain.Place" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO place (
		name, description, latitude,
		longitude,
		region, open_hours,
		pet_friendly, pet_verified, rest_days,
		price, phone,
		image_url, parking,
		home_page, external_content_id, source,
		place_type_id
		)
		VALUES (
		#{name}, #{description}, #{latitude},
		#{longitude}, #{region}, #{openHours},
		#{petFriendly}, #{petVerified},
		#{restDays}, #{price}, #{phone},
		#{imageUrl}, #{parking}, #{homePage},
		#{externalContentId}, #{source}, #{placeType.id}
		)
	</insert>

	<!-- select all -->
	<select id="findAll" resultMap="placeResultMap">
		SELECT * FROM place
	</select>

	<!-- select by id -->
	<select id="findById" resultMap="placeResultMap">
		SELECT * FROM place WHERE id =
		#{id}
	</select>

	<!-- 램덤 추천 -->
	<select id="findRecommendedPlacesByRandom"
		resultMap="placeResultMap">
		SELECT * FROM (
		-- ✅ [1] placeType 1 or 2
		SELECT * FROM (
		SELECT * FROM (
		SELECT p.*, 1 AS priority
		FROM place p
		JOIN place_category pc ON p.id =
		pc.place_id
		WHERE p.place_type_id IN (1, 2)
		AND p.region LIKE
		CONCAT('%', #{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY RAND()
		LIMIT 1
		) AS a1
		UNION
		SELECT * FROM (
		SELECT p.*, 1 AS
		priority
		FROM place p
		WHERE p.place_type_id IN (1, 2)
		AND p.region LIKE
		CONCAT('%', #{region}, '%')
		ORDER BY RAND()
		LIMIT 1
		) AS a2
		) AS t1

		UNION
		ALL

		-- ✅ [2] placeType = 6
		SELECT * FROM (
		SELECT * FROM (
		SELECT p.*, 2
		AS priority
		FROM place p
		JOIN place_category pc ON p.id = pc.place_id
		WHERE p.place_type_id = 6
		AND p.region LIKE CONCAT('%', #{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY RAND()
		LIMIT 1
		) AS b1
		UNION
		SELECT * FROM (
		SELECT p.*, 2 AS
		priority
		FROM place p
		WHERE p.place_type_id = 6
		AND p.region LIKE
		CONCAT('%', #{region}, '%')
		ORDER BY RAND()
		LIMIT 1
		) AS b2
		) AS t2

		UNION
		ALL

		-- ✅ [3] placeType = 5
		SELECT * FROM (
		SELECT * FROM (
		SELECT p.*, 3
		AS priority
		FROM place p
		JOIN place_category pc ON p.id = pc.place_id
		WHERE p.place_type_id = 5
		AND p.region LIKE CONCAT('%', #{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY RAND()
		LIMIT 1
		) AS c1
		UNION
		SELECT * FROM (
		SELECT p.*, 3 AS
		priority
		FROM place p
		WHERE p.place_type_id = 5
		AND p.region LIKE
		CONCAT('%', #{region}, '%')
		ORDER BY RAND()
		LIMIT 1
		) AS c2
		) AS t3

		UNION
		ALL

		-- ✅ [4] placeType = 4
		SELECT * FROM (
		SELECT * FROM (
		SELECT p.*, 4
		AS priority
		FROM place p
		JOIN place_category pc ON p.id = pc.place_id
		WHERE p.place_type_id = 4
		AND p.region LIKE CONCAT('%', #{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY RAND()
		LIMIT 1
		) AS d1
		UNION
		SELECT * FROM (
		SELECT p.*, 4 AS
		priority
		FROM place p
		WHERE p.place_type_id = 4
		AND p.region LIKE
		CONCAT('%', #{region}, '%')
		ORDER BY RAND()
		LIMIT 1
		) AS d2
		) AS t4
		) AS
		combined
		ORDER BY priority
	</select>

	<select id="findFirstRandomPlace" resultMap="placeResultMap">
		SELECT p.*
		FROM place p
		JOIN place_category pc ON p.id = pc.place_id
		WHERE p.place_type_id IN (1, 2)
		AND p.region LIKE CONCAT('%',
		#{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY RAND()
		LIMIT 1
	</select>

	<select id="findPlacesByTypeAndDistance"
		resultMap="placeResultMap">
		SELECT *
		FROM (
		-- ✅ 카테고리 일치 + 거리순
		SELECT p.*,
		(6371 * acos(
		cos(radians(#{baseLat}))
		* cos(radians(p.latitude))
		* cos(radians(p.longitude) - radians(#{baseLng}))
		+ sin(radians(#{baseLat})) * sin(radians(p.latitude))
		)) AS distance
		FROM place p
		JOIN place_category pc ON p.id = pc.place_id
		WHERE p.place_type_id = #{placeType}
		AND p.region LIKE CONCAT('%', #{region}, '%')
		AND pc.category_id IN
		<foreach collection="categoryIds" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>

		UNION

		-- ✅ 카테고리 없이 fallback
		SELECT p.*,
		(6371 * acos(
		cos(radians(#{baseLat}))
		* cos(radians(p.latitude))
		* cos(radians(p.longitude) - radians(#{baseLng}))
		+ sin(radians(#{baseLat})) * sin(radians(p.latitude))
		)) AS distance
		FROM place p
		WHERE p.place_type_id = #{placeType}
		AND p.region LIKE CONCAT('%', #{region}, '%')
		) AS result
		ORDER BY distance ASC
		LIMIT 1
	</select>


	<!-- update -->
	<update id="update"
		parameterType="com.ssdam.tripPaw.domain.Place">
		UPDATE place
		SET
		name = #{name},
		description =
		#{description},
		latitude = #{latitude},
		longitude = #{longitude},
		region
		=
		#{region},
		open_hours = #{openHours},
		pet_friendly = #{petFriendly},
		pet_verified = #{petVerified},
		rest_days = #{restDays},
		price =
		#{price},
		phone = #{phone},
		image_url = #{imageUrl},
		home_page =
		#{homePage},
		external_content_id = #{externalContentId},
		source =
		#{source}
		WHERE id = #{id}
	</update>

</mapper>
