<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssdam.tripPaw.nft.MemberNftMapper">

  <!-- resultMap 정의: id → result → association 순서 지킴 -->
  <resultMap id="MemberNftResultMap" type="com.ssdam.tripPaw.domain.MemberNft">
    <id property="id" column="id" />
    <result property="tokenId" column="token_id" />
    <result property="walletAddress" column="wallet_address" />
    <result property="barcode" column="barcode" />
    <result property="dueAt" column="due_at" />
    <result property="issuedReason" column="issued_reason" />
    <result property="txHash" column="tx_hash" />
    <result property="issuedAt" column="issued_at" />
    <result property="usedAt" column="used_at" />

    <association property="nftMetadata" javaType="com.ssdam.tripPaw.domain.NftMetadata">
      <id property="id" column="nft_metadata_id" />
      <result property="title" column="title" />
      <result property="imageUrl" column="image_url" />
      <result property="pointValue" column="point_value" />
    </association>

    <association property="member" javaType="com.ssdam.tripPaw.domain.Member">
      <id property="id" column="member_id" />
      <result property="nickname" column="nickname" />
    </association>
  </resultMap>

  <!-- 멤버 ID로 NFT 리스트 조회 -->
  <select id="findByMemberId" resultMap="MemberNftResultMap" parameterType="long">
    SELECT 
      mn.*, nm.title, nm.image_url, nm.point_value,
      m.nickname  <!-- 멤버 닉네임 추가 -->
    FROM member_nft mn
    JOIN nft_metadata nm ON mn.nft_metadata_id = nm.id
    JOIN member m ON mn.member_id = m.id   <!-- member 테이블 조인 추가 -->
    WHERE mn.member_id = #{memberId}
  </select>

  <!-- NFT 단건 조회 (사용 시 필요한 정보) -->
  <select id="findById" resultMap="MemberNftResultMap" parameterType="long">
    SELECT 
      mn.*, nm.title, nm.image_url, nm.point_value
    FROM member_nft mn
    JOIN nft_metadata nm ON mn.nft_metadata_id = nm.id
    WHERE mn.id = #{id}
  </select>

  <!-- NFT 삽입 -->
  <insert id="insert" parameterType="com.ssdam.tripPaw.domain.MemberNft">
    INSERT INTO member_nft (
      nft_metadata_id, member_id, token_id, wallet_address, barcode,
      due_at, issued_reason, tx_hash, issued_at
    ) VALUES (
      #{nftMetadata.id}, #{member.id}, #{tokenId}, #{walletAddress}, #{barcode},
      #{dueAt}, #{issuedReason}, #{txHash}, #{issuedAt}
    )
 </insert>

  <!-- NFT 수정 -->
  <update id="update" parameterType="com.ssdam.tripPaw.domain.MemberNft">
    UPDATE member_nft
    SET
      nft_metadata_id = #{nftMetadata.id},
      member_id = #{member.id},
      wallet_address = #{walletAddress},
      barcode = #{barcode},
      due_at = #{dueAt},
      issued_reason = #{issuedReason},
      tx_hash = #{txHash}
    WHERE id = #{id}
  </update>

  <!-- 사용 처리 -->
  <update id="markAsUsed" parameterType="map">
    UPDATE member_nft
    SET used_at = #{usedAt}
    WHERE id = #{id}
  </update>

  <!-- 유저가 자신의 NFT 삭제 -->
  <delete id="deleteByIdAndMemberId" parameterType="map">
    DELETE FROM member_nft
    WHERE id = #{id} AND member_id = #{memberId}
  </delete>
  
  <!-- 관리자용: 사용 완료된 NFT만 삭제 -->
  <delete id="deleteUsedByNftMetadataId" parameterType="long">
    DELETE FROM member_nft
    WHERE nft_metadata_id = #{nftMetadataId}
      AND used_at IS NOT NULL
  </delete>
  
  <!-- 사용하지 않은 쿠폰 존재 여부 확인 -->
  <select id="countUnusedByMetadataId" resultType="int" parameterType="long">
    SELECT COUNT(*) 
    FROM member_nft 
    WHERE nft_metadata_id = #{nftMetadataId}
      AND used_at IS NULL
  </select>

  <!-- NFT 소유자 변경 (선물 기능) -->
  <update id="giftNft" parameterType="map">
    UPDATE member_nft
    SET member_id = #{toMemberId}
    WHERE id = #{nftId} AND member_id = #{fromMemberId}
  </update>

  <!-- 특정 NFT 메타데이터 ID에 해당하는 발급 여부 확인 -->
  <select id="existsByNftMetadataId" parameterType="long" resultType="boolean">
    SELECT COUNT(*) > 0 FROM member_nft WHERE nft_metadata_id = #{metadataId}
  </select>

</mapper>
