<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssdam.tripPaw.reserv.ReservMapper">
	
	<resultMap id="ReservResultMap" type="com.ssdam.tripPaw.domain.Reserv">
	  <id property="id" column="id"/>
	  <result property="countPeople" column="count_people"/>
	  <result property="countPet" column="count_pet"/>
	  <result property="createdAt" column="created_at"/>
	  <result property="deleteAt" column="delete_at"/>
	  <result property="startDate" column="start_date"/>
	  <result property="endDate" column="end_date"/>
	  <result property="expireAt" column="expire_at"/>
	  <result property="state" column="state"/>
	  <result property="originalPrice" column="original_price"/>
	  <result property="finalPrice" column="final_price"/>

	  <association property="member" javaType="com.ssdam.tripPaw.domain.Member">
	    <id property="id" column="member_id"/>
	    <result property="username" column="member_username"/>
	  </association>

	  <association property="place" javaType="com.ssdam.tripPaw.domain.Place">
	    <id property="id" column="place_id"/>
	    <result property="name" column="place_name"/>
	    <result property="latitude" column="latitude"/>
	    <result property="longitude" column="longitude"/>
	    <result property="region" column="region"/>	    
	  </association>

	</resultMap>
	<!-- 예약 + 장소 포함 매핑 -->
  	<resultMap id="ReservWithPlaceResultMap"
             type="com.ssdam.tripPaw.domain.Reserv"
             extends="ReservResultMap">
    	<association property="place" javaType="com.ssdam.tripPaw.domain.Place">
	      <id property="id" column="p_id"/>
	      <result property="name" column="p_name"/>
	      <result property="latitude" column="latitude"/>
	      <result property="longitude" column="longitude"/>
	      <result property="region" column="region"/>	
	    </association>
	</resultMap>

	<select id="findAll" resultMap="ReservResultMap">
	  SELECT r.*, p.id AS place_id, p.name AS place_name, p.latitude, p.longitude, p.region,
	           m.id AS member_id, m.username AS member_username
	  FROM reserv r
	  JOIN place p ON r.place_id = p.id
	  JOIN member m ON r.member_id = m.id
	  ORDER BY r.created_at DESC
	</select>

  <select id="findById" parameterType="long" resultType="com.ssdam.tripPaw.domain.Reserv">
    SELECT * FROM reserv WHERE id = #{id}
  </select>

<insert id="insert" parameterType="com.ssdam.tripPaw.domain.Reserv"
        useGeneratedKeys="true" keyProperty="id" keyColumn="id">
  INSERT INTO reserv (
    start_date, end_date, expire_at, delete_at, state,
    created_at, count_people, count_pet,
    original_price, final_price,
    member_id, place_id
    
    <if test="tripPlan != null">
      , trip_plan_id
    </if>
  )
  VALUES (
    #{startDate}, #{endDate}, #{expireAt}, #{deleteAt}, #{state},
    #{createdAt}, #{countPeople}, #{countPet},
    #{originalPrice}, #{finalPrice},
    #{member.id}, #{place.id}
    <if test="tripPlan != null">
      , #{tripPlan.id}
    </if>
  )
</insert>


	<select id="existsOverlappingReservation" resultType="boolean">
	  SELECT COUNT(*) > 0
	  FROM reserv
	  WHERE delete_at IS NULL
	    AND member_id = #{memberId}
	    AND place_id = #{placeId}
	    AND end_date >= CURRENT_DATE
	    AND state IN ('WAITING', 'CONFIRMED')
	    AND (
	      (start_date BETWEEN #{startDate} AND #{endDate})
	      OR
	      (end_date BETWEEN #{startDate} AND #{endDate})
	      OR
	      (#{startDate} BETWEEN start_date AND end_date)
	      OR
	      (#{endDate} BETWEEN start_date AND end_date)
	    )
	</select>

  <update id="updateByState" parameterType="com.ssdam.tripPaw.domain.Reserv">
    UPDATE reserv SET state = #{state} WHERE id = #{id}
  </update>

	<update id="softDelete" parameterType="long">
	  UPDATE reserv 
	  SET delete_at = CURRENT_DATE,
	      state = 'CANCELLED'
	  WHERE id = #{id}
	</update>
  
  <select id="findByIdWithPlace"
          parameterType="long"
          resultMap="ReservWithPlaceResultMap">
    SELECT 
      r.id, r.start_date, r.end_date, r.expire_at, r.delete_at, r.state,
      r.count_people, r.count_pet, r.original_price, r.final_price,
      p.id AS p_id, p.name AS p_name, p.latitude, p.longitude, p.region
    FROM reserv r
    JOIN place p ON r.place_id = p.id
    WHERE r.id = #{id} AND r.delete_at IS NULL
  </select>
  
  <select id="findActiveReservedRanges" resultType="map">
	  SELECT start_date, end_date
	  FROM reserv
	  WHERE delete_at IS NULL
	    AND state IN ('WAITING', 'CONFIRMED')
	</select>
	
  <select id="findByTripPlanId" parameterType="long" resultType="com.ssdam.tripPaw.domain.Reserv">
	  SELECT * FROM reserv 
	  WHERE trip_plan_id = #{tripPlanId} 
	    AND delete_at IS NULL
	  ORDER BY start_date ASC
	  LIMIT 1
	</select>

  
</mapper>